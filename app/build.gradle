apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "app.sqliteextforjavaudf"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['jniLibs']
        }
    }
}

task extractSoFromEveryAar{
    def sOutputDir="${project.rootDir}/${project.name}/jniLibs/";
    fileTree("${project.rootDir}/vendorAar").matching {include "**/*.aar"}.each{ File file ->
//      println("1: " + file.getCanonicalPath());
        project.file(sOutputDir).mkdirs();
        copy{
            from zipTree(file.getCanonicalPath())
            into sOutputDir
            include "jni/**/*.so"
            eachFile {
//              println("2: " + it);
                def segments = it.getRelativePath().getSegments() as List
                it.setPath(segments.tail().join("/"))
                return it
            }
            includeEmptyDirs = false
        }
    }
}

preBuild.dependsOn extractSoFromEveryAar

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation project(path: ':libSqliteExtForJavaUdf')
    implementation project(path: ':sqlite-android-3330000')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}